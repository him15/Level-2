-----------------------------cpp
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head == nullptr || head->next == nullptr){
            return head;
        }
        ListNode* curr = head;
        ListNode* prev = nullptr;
        
        while(curr != nullptr){
            ListNode* frw = curr->next;
            curr->next = prev;
            prev = curr;
            curr = frw;
        }
        return prev;
    }
};


----------------------------java
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        ListNode curr = head;
        ListNode prev = null;
        
        while(curr != null){
            ListNode frw = curr.next;
            curr.next = prev;
            prev = curr;
            curr = frw;
        }
        return prev;
    }
    
}
